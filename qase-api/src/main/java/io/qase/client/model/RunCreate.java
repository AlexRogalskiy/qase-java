/*
 * Qase.io API
 * # Introduction  You can use our API to access [Qase.io](https://qase.io) API endpoints, which allows to retrieve information about entities stored in database and perform actions with them. The API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).  # API Rate limits  Your application can make up to 200 API requests per minute.  Once the limit is exceeded, clients receive an HTTP 429 with a Retry-After: X header to indicate how long their timeout period is before they will be able to send requests again. The timeout period is set to 60 seconds once the limit is exceeded.  # Authentication  To authorize, use this code:  ```shell # With shell, you can just pass the correct header with each request curl \"https://api.qase.io/v1/api_endpoint\"   -H \"Token: api_token\"   -H \"Content-Type: application/json\" ```  Make sure to replace `api_token` with your API key.  Qase.io uses API tokens to authenticate requests. You can view an manage your API keys in [API tokens pages](https://app.qase.io/user/api/token).  Your API keys has the same access rights as your role in the app, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.  Qase API expects for the API key to be included in all API requests to the server in a header that looks like the following:  `Token: api_token`  You must replace `api_token` with your personal API key.  All API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Calls made over plain HTTP will fail. API requests without authentication will also fail.  # Access rights  Qase.io is using Role-based Access Control system to restrict some features usage in Web interface and the same rules are applied to API methods. In description for each method you will find a rule name, that is required to perform an action through API. If you don't have enough access rights, you will receive an error with `403` status code.  # Errors  Qase API uses the following error codes:  Code | Meaning ---------- | ------- 400 | Bad Request - Your request is invalid. 401 | Unauthorized - Your API key is wrong. 403 | Forbidden - Your role doesn't have enough permissions to perform this action 404 | Not Found - The resource could not be found. 405 | Method Not Allowed - You tried to access a resource with an invalid method. 406 | Not Acceptable - You requested a format that isn't json. 410 | Gone - The resource requested has been removed from our servers. 429 | Too Many Requests - You're performing too many requests! Slow down! 500 | Internal Server Error - We had a problem with our server. Try again later. 503 | Service Unavailable - We're temporarily offline for maintenance. Please try again later. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qase.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.qase.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * RunCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-15T23:17:33.666847+03:00[Europe/Moscow]")
public class RunCreate {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_INCLUDE_ALL_CASES = "include_all_cases";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ALL_CASES)
  private Boolean includeAllCases;

  public static final String SERIALIZED_NAME_CASES = "cases";
  @SerializedName(SERIALIZED_NAME_CASES)
  private List<Long> cases = null;

  public static final String SERIALIZED_NAME_IS_AUTOTEST = "is_autotest";
  @SerializedName(SERIALIZED_NAME_IS_AUTOTEST)
  private Boolean isAutotest;

  public static final String SERIALIZED_NAME_ENVIRONMENT_ID = "environment_id";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_ID)
  private Long environmentId;

  public static final String SERIALIZED_NAME_MILESTONE_ID = "milestone_id";
  @SerializedName(SERIALIZED_NAME_MILESTONE_ID)
  private Long milestoneId;

  public static final String SERIALIZED_NAME_PLAN_ID = "plan_id";
  @SerializedName(SERIALIZED_NAME_PLAN_ID)
  private Long planId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public RunCreate title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public RunCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public RunCreate includeAllCases(Boolean includeAllCases) {
    
    this.includeAllCases = includeAllCases;
    return this;
  }

   /**
   * Get includeAllCases
   * @return includeAllCases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeAllCases() {
    return includeAllCases;
  }


  public void setIncludeAllCases(Boolean includeAllCases) {
    this.includeAllCases = includeAllCases;
  }


  public RunCreate cases(List<Long> cases) {
    
    this.cases = cases;
    return this;
  }

  public RunCreate addCasesItem(Long casesItem) {
    if (this.cases == null) {
      this.cases = new ArrayList<>();
    }
    this.cases.add(casesItem);
    return this;
  }

   /**
   * Get cases
   * @return cases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Long> getCases() {
    return cases;
  }


  public void setCases(List<Long> cases) {
    this.cases = cases;
  }


  public RunCreate isAutotest(Boolean isAutotest) {
    
    this.isAutotest = isAutotest;
    return this;
  }

   /**
   * Get isAutotest
   * @return isAutotest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAutotest() {
    return isAutotest;
  }


  public void setIsAutotest(Boolean isAutotest) {
    this.isAutotest = isAutotest;
  }


  public RunCreate environmentId(Long environmentId) {
    
    this.environmentId = environmentId;
    return this;
  }

   /**
   * Get environmentId
   * minimum: 1
   * @return environmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getEnvironmentId() {
    return environmentId;
  }


  public void setEnvironmentId(Long environmentId) {
    this.environmentId = environmentId;
  }


  public RunCreate milestoneId(Long milestoneId) {
    
    this.milestoneId = milestoneId;
    return this;
  }

   /**
   * Get milestoneId
   * minimum: 1
   * @return milestoneId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMilestoneId() {
    return milestoneId;
  }


  public void setMilestoneId(Long milestoneId) {
    this.milestoneId = milestoneId;
  }


  public RunCreate planId(Long planId) {
    
    this.planId = planId;
    return this;
  }

   /**
   * Get planId
   * minimum: 1
   * @return planId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPlanId() {
    return planId;
  }


  public void setPlanId(Long planId) {
    this.planId = planId;
  }


  public RunCreate tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public RunCreate addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunCreate runCreate = (RunCreate) o;
    return Objects.equals(this.title, runCreate.title) &&
        Objects.equals(this.description, runCreate.description) &&
        Objects.equals(this.includeAllCases, runCreate.includeAllCases) &&
        Objects.equals(this.cases, runCreate.cases) &&
        Objects.equals(this.isAutotest, runCreate.isAutotest) &&
        Objects.equals(this.environmentId, runCreate.environmentId) &&
        Objects.equals(this.milestoneId, runCreate.milestoneId) &&
        Objects.equals(this.planId, runCreate.planId) &&
        Objects.equals(this.tags, runCreate.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, includeAllCases, cases, isAutotest, environmentId, milestoneId, planId, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunCreate {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    includeAllCases: ").append(toIndentedString(includeAllCases)).append("\n");
    sb.append("    cases: ").append(toIndentedString(cases)).append("\n");
    sb.append("    isAutotest: ").append(toIndentedString(isAutotest)).append("\n");
    sb.append("    environmentId: ").append(toIndentedString(environmentId)).append("\n");
    sb.append("    milestoneId: ").append(toIndentedString(milestoneId)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

